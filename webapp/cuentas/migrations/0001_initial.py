# Generated by Django 2.2.24 on 2021-06-29 17:21

import cuentas.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario registrado con ese correo.'}, max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=30, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=30, verbose_name='Apellido')),
                ('role', models.CharField(choices=[('organizacion', 'Organizacion'), ('persona', 'Persona')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', cuentas.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intereses', models.CharField(choices=[('Fin Pobreza', 'Fin Pobreza'), ('Hambre Cero', 'Hambre Cero'), ('Salud y Bienestar', 'Salud y Bienestar'), ('Educación de Calidad', 'Educación de Calidad'), ('Igualdad de Género', 'Igualdad de Género'), ('Agua Limpia y Saneamiento', 'Agua Limpia y Saneamiento'), ('Energía Asequible y Limpia', 'Energía Asequible y Limpia'), ('Trabajo decente y Crecimeinto Económico', 'Trabajo decente y Crecimeinto Económico'), ('Industrial Innovación e Infraestructuras', 'Industrial Innovación e Infraestructuras'), ('Reducción de Desigualdades', 'Reducción de Desigualdades'), ('Ciudades y Comunidades Sostenibles', 'Ciudades y Comunidades Sostenibles'), ('Producción y Consumos Resposables', 'Producción y Consumos Resposables'), ('Acción por el Clima', 'Acción por el Clima'), ('Vida Submarina', 'Vida Submarina'), ('Vida de Ecositemas Terrestres', 'Vida de Ecositemas Terrestres'), ('Paz Justicia e Instituciones Sólidas', 'Paz Justicia e Instituciones Sólidas'), ('Alianza para lograr los objetivos', 'Alianza para lograr los objetivos')], default='Fin Pobreza', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='userprofile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('descripcion', models.TextField(blank=True, max_length=500, null=True, verbose_name='Sobre mi')),
                ('imagen', models.FileField(blank=True, default='default.png', null=True, upload_to='u_perfiles')),
                ('cedula', models.CharField(blank=True, default='9999999999', max_length=10, null=True, verbose_name='Cédula')),
                ('direccion', models.CharField(max_length=100, verbose_name='Dirección')),
                ('telefono', models.CharField(max_length=10, verbose_name='Teléfono')),
                ('activo', models.BooleanField(default=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('ods', models.ManyToManyField(to='cuentas.Ods')),
            ],
            options={
                'verbose_name': 'Perfil de personas',
                'verbose_name_plural': 'Pefiles de personas',
            },
        ),
        migrations.CreateModel(
            name='Ods_profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cuentas.Ods')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cuentas.Profile')),
            ],
        ),
    ]
